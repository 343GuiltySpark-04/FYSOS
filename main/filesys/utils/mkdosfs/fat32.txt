# Resource file used with MKDOSFS for the FILESYS book by Benjamin David Lunt
#  Copyright 1984-2020  All Rights Reserved
#
#  mbrfile=filename   - This is the path/filename of the mbr file to use (should be 1 sector in length)
#  bootfile=filename  - This is the path/filename of the boot code file to use (should be 1+ sectors in length)
#  imgfile=filename   - This is the path/filename of the target file to create/modify
#  base_lba=0         - Base LBA to write the Super Block to
#  tot_sects=0        - Total sectors to "allocate"
#  param0=32          - Create FAT 32 image
#  param1=8           - Sectors Per Cluster
#  heads=16           - heads per cylinder
#  spt=63             - sectors per track
#   path_to_source_file0, filename_to_use0, 0
#   path_to_source_file1, filename_to_use1, 0

# If you don't give the /E parameter on the command line, this app will
#  create an image that contains a MBR and the 1+ sector boot code, specified
#  by the parameters below.
# If you do give the /E parameter, the mbrfile and bootfile parameters are
#  ignored, and the first sector written is the BPB.
imgfile=  D:\fysos\main\filesys\images\fat32.img

# When /E is used:
#   Base_lba is the LBA with in the existing image to write the BPB to.
#   Everything from this LBA to LBA+tot_sects-1 will be modified
#   tot_sects does not include MBR.
# When /E is not used:
#   Base_lba should be 63, but is not required.
#   tot_sects includes MBR, boot, and all remaining sectors
# You may use decimal or hexadecimal numbers
base_lba= 63        # Base LBA of partition (LBA of 1st sector of boot code)
tot_sects= 10080    # Total number of sectors in partition
param0= 32          # Create FAT 32 image
param1= 8           # Sectors Per Cluster
heads= 16           # heads per cylinder
spt= 63             # sectors per track

# The remaining list of files are the files that this app should find and
#  write to the root directory of the image.  First parameter is the
#  full path name of the file to copy, second parameter is the name of the
#  file to use in the image's root directory.
# The third parameter is to indicate whether this utility should create
#  a valid Short File Name entry or obey the patent and create a dummy one
#  1 = valid SFN entry, 0 = dummy
# You may have as many or as few as you wish.  Please note that this app
#  does not check for out of bounds due to too many root directory entries
#  specified below.
fat12.txt, fat12.txt, 1
fat16.txt, fat16.txt, 0
fat32.txt, fat32.txt, 1
